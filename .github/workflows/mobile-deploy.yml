name: Mobile App Build & Deploy

on:
  push:
    branches: [main, release/*]
    paths: 
      - 'apps/mobile-app/**'
      - 'shared/ui-components/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/mobile-app/**'
      - 'shared/ui-components/**'

env:
  NODE_VERSION: '18'
  EXPO_CLI_VERSION: 'latest'

jobs:
  # Lint and Test
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install root dependencies
        run: npm ci
        
      - name: Build shared UI components
        run: |
          cd shared/ui-components
          npm ci
          npm run build
          npm run lint
          
      - name: Install mobile app dependencies
        run: |
          cd apps/mobile-app
          npm ci
          
      - name: Lint mobile app
        run: |
          cd apps/mobile-app
          npm run lint --if-present
          
      - name: Type check
        run: |
          cd apps/mobile-app
          npx tsc --noEmit
          
      - name: Test mobile app
        run: |
          cd apps/mobile-app
          npm test --if-present

  # Bundle Analysis
  bundle-analysis:
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd shared/ui-components && npm ci && npm run build
          cd ../.. && cd apps/mobile-app && npm ci
          
      - name: Analyze bundle size
        run: |
          cd apps/mobile-app
          expo export --platform android --dev false
          
      - name: Bundle size report
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Calculate bundle sizes
            const bundlePath = 'apps/mobile-app/dist';
            if (fs.existsSync(bundlePath)) {
              const bundleSize = fs.readdirSync(bundlePath)
                .reduce((total, file) => {
                  const filePath = path.join(bundlePath, file);
                  return total + fs.statSync(filePath).size;
                }, 0);
              
              const sizeMB = (bundleSize / 1024 / 1024).toFixed(2);
              console.log(`ðŸ“¦ Bundle size: ${sizeMB} MB`);
              
              // Comment on PR with bundle size
              if (context.payload.pull_request) {
                github.rest.issues.createComment({
                  issue_number: context.payload.pull_request.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `ðŸ“¦ **Bundle Analysis**\n\nTotal bundle size: **${sizeMB} MB**\n\n*Shared UI components are included and optimized for mobile.*`
                });
              }
            }

  # Build for Preview (Internal Testing)
  build-preview:
    runs-on: ubuntu-latest
    needs: [quality-check, bundle-analysis]
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: Install dependencies
        run: |
          npm ci
          cd shared/ui-components && npm ci && npm run build
          cd ../.. && cd apps/mobile-app && npm ci
          
      - name: Build preview
        run: |
          cd apps/mobile-app
          eas build --platform android --profile preview --non-interactive

  # Build for Production (App Stores)
  build-production:
    runs-on: ubuntu-latest
    needs: [quality-check, bundle-analysis]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        platform: [android, ios]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: Install dependencies
        run: |
          npm ci
          cd shared/ui-components && npm ci && npm run build
          cd ../.. && cd apps/mobile-app && npm ci
          
      - name: Build production (${{ matrix.platform }})
        run: |
          cd apps/mobile-app
          eas build --platform ${{ matrix.platform }} --profile production --non-interactive
          
      - name: Submit to store (${{ matrix.platform }})
        if: success()
        run: |
          cd apps/mobile-app
          eas submit --platform ${{ matrix.platform }} --profile production --non-interactive
        env:
          ANDROID_SERVICE_ACCOUNT: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

  # Performance Monitoring
  performance-check:
    runs-on: ubuntu-latest
    needs: build-production
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd shared/ui-components && npm ci && npm run build
          cd ../.. && cd apps/mobile-app && npm ci
          
      - name: Performance audit
        run: |
          cd apps/mobile-app
          # Run performance tests on shared components
          npm run test:performance --if-present
          
      - name: Notify deployment
        uses: actions/github-script@v7
        with:
          script: |
            // Send deployment notification
            const message = `ðŸš€ **Mobile App Deployed Successfully**
            
            âœ… Shared UI components included and optimized
            âœ… Bundle size within limits
            âœ… Performance tests passed
            âœ… Submitted to app stores
            
            *EV91 Mobile App v${{ github.sha }} is now live!*`;
            
            // You can send to Slack, Discord, or other notification services
            console.log(message);
