version: '3.8'
services:
  # Database Services
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-ev91db}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-ev91db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ev91-network
  
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - ev91-network
  
  # Backend Services
  api-gateway:
    build:
      context: ../apps/api-gateway
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:4001
      - TEAM_SERVICE_URL=http://team-service:3002
      - CLIENT_STORE_SERVICE_URL=http://client-store-service:3004
      - RIDER_SERVICE_URL=http://rider-service:6000
      - PAYMENT_SERVICE_URL=http://payment-service:4003
      - VEHICLE_SERVICE_URL=http://vehicle-service:4004
      - USER_SERVICE_URL=http://user-service:3001
      - ORDER_SERVICE_URL=http://order-service:3005
      - NOTIFICATION_SERVICE_URL=http://notification-service:3006
    depends_on:
      - auth-service
      - team-service
      - client-store-service
      - rider-service
      - payment-service
      - vehicle-service
      - user-service
      - order-service
      - notification-service
    networks:
      - ev91-network

  # Microservices - Port Range 4001-4010
  auth-service:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      - PORT=4001
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=auth
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:4000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/auth-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  user-service:
    build:
      context: ../services/user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=user
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/user-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  team-service:
    build:
      context: ../services/team-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=team
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/team-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  payment-service:
    build:
      context: ../services/payment-service
      dockerfile: Dockerfile
    ports:
      - "4003:4003"
    environment:
      - PORT=4003
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=payment
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/payment-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  client-store-service:
    build:
      context: ../services/client-store-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=client_store
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/client-store-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  vehicle-service:
    build:
      context: ../services/vehicle-service
      dockerfile: Dockerfile
    ports:
      - "4004:4004"
    environment:
      - PORT=4004
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=vehicle
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/vehicle-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  order-service:
    build:
      context: ../services/order-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=order
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/order-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  rider-service:
    build:
      context: ../services/rider-service
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    environment:
      - PORT=6000
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=rider
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/rider-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  notification-service:
    build:
      context: ../services/notification-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      - PORT=3006
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=notification
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../services/notification-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  template-service:
    build:
      context: ../services/template-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    environment:
      - PORT=3007
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ev91db?schema=template
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../services/template-service:/app
      - /app/node_modules
    networks:
      - ev91-network
  
  # Frontend Services - Port Range 3000-3099
  admin-portal:
    build:
      context: ../apps/admin-portal
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../apps/admin-portal:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:4000
      - VITE_AUTH_SERVICE_URL=http://localhost:4001
      - VITE_VEHICLE_API_URL=http://localhost:4003
    depends_on:
      - api-gateway
      - vehicle-service
    networks:
      - ev91-network

  mobile-app:
    build:
      context: ../apps/mobile-app
      dockerfile: Dockerfile
    ports:
      - "19006:19006"  # Expo Metro bundler port
      - "19001:19001"  # Expo DevTools port  
    volumes:
      - ../apps/mobile-app:/app
      - /app/node_modules
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
    networks:
      - ev91-network

volumes:
  pgdata:
  redisdata:

networks:
  ev91-network:
    driver: bridge
