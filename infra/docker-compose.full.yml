version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ev91user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ev91pass}
      POSTGRES_DB: ${POSTGRES_DB:-ev91db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ev91user} -d ${POSTGRES_DB:-ev91db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ev91-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - ev91-network

  # Infrastructure Services
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - admin-portal
    networks:
      - ev91-network

  # Core Services
  api-gateway:
    build:
      context: ../apps/api-gateway
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=4000
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - AUTH_SERVICE_URL=http://auth-service:4001
      - USER_SERVICE_URL=http://user-service:3001
      - TEAM_SERVICE_URL=http://team-service:3002
      - VEHICLE_SERVICE_URL=http://vehicle-service:4004
      - RIDER_SERVICE_URL=http://rider-service:6000
      - ORDER_SERVICE_URL=http://order-service:3005
      - PAYMENT_SERVICE_URL=http://payment-service:4003
      - NOTIFICATION_SERVICE_URL=http://notification-service:3006
      - CLIENT_STORE_SERVICE_URL=http://client-store-service:3004
      - TEMPLATE_SERVICE_URL=http://template-service:3007
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../apps/api-gateway:/app
      - /app/node_modules
    networks:
      - ev91-network

  # Frontend Applications
  admin-portal:
    build:
      context: ../apps/admin-portal
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://api-gateway:4000
      - VITE_AUTH_SERVICE_URL=http://auth-service:4001
    depends_on:
      - api-gateway
    volumes:
      - ../apps/admin-portal:/app
      - /app/node_modules
    networks:
      - ev91-network

  mobile-app:
    build:
      context: ../apps/mobile-app
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${MOBILE_APP_PORT:-19006}:19006"
      - "${EXPO_DEV_PORT:-19000}:19000"
      - "${EXPO_METRO_PORT:-8081}:8081"
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
      - API_BASE_URL=http://api-gateway:4000
    depends_on:
      - api-gateway
    volumes:
      - ../apps/mobile-app:/app
      - /app/node_modules
    networks:
      - ev91-network

  # Authentication & User Management
  auth-service:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=4001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-10}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../services/auth-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  user-service:
    build:
      context: ../services/user-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/user-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  # Business Services
  team-service:
    build:
      context: ../services/team-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
      - USER_SERVICE_URL=http://user-service:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/team-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  vehicle-service:
    build:
      context: ../services/vehicle-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=4004
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/vehicle-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  rider-service:
    build:
      context: ../services/rider-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=6000
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
      - VEHICLE_SERVICE_URL=http://vehicle-service:4004
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/rider-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  order-service:
    build:
      context: ../services/order-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
      - VEHICLE_SERVICE_URL=http://vehicle-service:4004
      - RIDER_SERVICE_URL=http://rider-service:6000
      - PAYMENT_SERVICE_URL=http://payment-service:4003
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/order-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  payment-service:
    build:
      context: ../services/payment-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=4003
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/payment-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  notification-service:
    build:
      context: ../services/notification-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3006
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
      - EMAIL_SERVICE_API_KEY=${EMAIL_SERVICE_API_KEY}
      - SMS_SERVICE_API_KEY=${SMS_SERVICE_API_KEY}
      - PUSH_NOTIFICATION_KEY=${PUSH_NOTIFICATION_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/notification-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  client-store-service:
    build:
      context: ../services/client-store-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/client-store-service:/app
      - /app/node_modules
    networks:
      - ev91-network

  template-service:
    build:
      context: ../services/template-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3007
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ev91user}:${POSTGRES_PASSWORD:-ev91pass}@postgres:5432/${POSTGRES_DB:-ev91db}
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:4001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - ../services/template-service:/app
      - /app/node_modules
    networks:
      - ev91-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ev91-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
